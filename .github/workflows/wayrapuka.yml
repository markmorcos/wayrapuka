name: wayrapuka

on:
  workflow_dispatch: {}
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: npm ci && npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and push Docker image
        env:
          ${{ github.sha }}: ${{ github.sha }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker buildx create --use
          projectName=$(grep 'projectName:' infrastructure.yaml | cut -d ' ' -f 2)
          docker buildx build \
            --platform linux/arm64,linux/amd64 \
            -t markmorcos/${projectName}:$${{ github.sha }} \
            -t markmorcos/${projectName}:latest \
            --push \
            -f Dockerfile \
            .

      - name: Deploy to Raspberry Pi using Helm and remote chart
        run: |
          echo "${{ secrets.RASPBERRY_PI_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

          chartVersion=$(grep 'chartVersion:' infrastructure.yaml | cut -d ' ' -f 2)
          projectName=$(grep 'projectName:' infrastructure.yaml | cut -d ' ' -f 2)

          cat infrastructure.yaml | ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no \
            "${{ secrets.RASPBERRY_PI_USERNAME }}@${{ secrets.RASPBERRY_PI_HOST }}" \
            'export KUBECONFIG=/home/mark/.kube/config && \
            helm upgrade --install '"${projectName}"' oci://registry-1.docker.io/${{ secrets.DOCKER_USERNAME }}/base-chart \
            --version '"${chartVersion}"' \
            -f - \
            -n '"${projectName}"' --create-namespace'
